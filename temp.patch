commit b99484eea08a86ba27b8bb9a155ea1d1138ba81f
Author: ada-core <clovett@microsoft.com>
Date:   Tue Feb 8 21:01:41 2022 -0800

    remove web server since the kiosk is much better.

diff --git a/Server/ada_server.py b/Server/ada_server.py
index 4f3ecfc..e9016f6 100644
--- a/Server/ada_server.py
+++ b/Server/ada_server.py
@@ -10,10 +10,8 @@ import socket
 import sys
 from threading import Lock
 from collections import namedtuple
-from http.server import HTTPServer
 from priority_queue import PriorityQueue
 import sensei
-import web_server
 import firmware
 from messagebus import WebPubSubGroup
 import asyncio
@@ -21,7 +19,6 @@ import asyncio
 script_dir = os.path.dirname(os.path.abspath(__file__))
 sys.path += [os.path.join(script_dir, "../PiBridge")]
 
-HttpServerPort = 4000
 from bridge_client import PiBridgeClient
 from lighting_designer import LightingDesigner
 
@@ -36,10 +33,9 @@ class AdaServer:
     It maintains a queue of animations we want to play with an additional concept
     of priority so something can jump to the front of the queue.
     """
-    def __init__(self, config, msgbus, server_endpoint, web_address):
+    def __init__(self, config, msgbus, server_endpoint):
         self.config = config
         self.msgbus = msgbus
-        self.web_address = web_address
         self.server_endpoint = server_endpoint
         self.client_queues = {}  # the pending command queue for each rpi client.
         self.clients = {}  # the dictionary of connected client sockets
@@ -60,21 +56,6 @@ class AdaServer:
         self.firmware.start()
         self.closed = False
         _thread.start_new_thread(self.serve_forever, ())
-        if self.web_address:
-            _thread.start_new_thread(self.web_server_thread, ())
-
-    def web_server_thread(self):
-        host_name = self.web_address
-        http_server = HTTPServer((host_name, HttpServerPort), web_server.AdaWebServer)
-        print("Server started http://%s:%s" % (host_name, HttpServerPort))
-
-        try:
-            http_server.serve_forever()
-        except KeyboardInterrupt:
-            pass
-
-        http_server.server_close()
-        print("Web Server stopped.")
 
     def close(self):
         self.firmware.stop()
@@ -126,9 +107,6 @@ class AdaServer:
         self.lock.release()
         return result
 
-    def get_web_server_context(self):
-        return web_server.Context
-
     def read_camera(self, timeout):
         while self.camera_queue.size() > 2:
             self.camera_queue.dequeue()  # flush the queue so we keep up to date with latest info
@@ -439,7 +417,7 @@ async def async_read_enter(server):
             await asyncio.sleep(0.1)
 
 
-async def _main(config, sensei, ip_address, web_address):
+async def _main(config, sensei, ip_address):
     endpoint = (ip_address, config.server_port)
     msgbus = None
 
@@ -450,7 +428,7 @@ async def _main(config, sensei, ip_address, web_address):
     else:
         msgbus = WebPubSubGroup(webpubsub_constr, config.pubsub_hub, "server", config.pubsub_group)
         await msgbus.connect()
-    server = AdaServer(config, msgbus, endpoint, web_address)
+    server = AdaServer(config, msgbus, endpoint)
     server.start()
     designer = LightingDesigner(server, msgbus, sensei, config)
     designer.start()
@@ -467,7 +445,6 @@ if __name__ == '__main__':
 
     parser = argparse.ArgumentParser("ada_server makes Sensei database available to the ada raspberry pi devices")
     parser.add_argument("--ip", help="optional IP address of the server (default 'localhost')", default="localhost")
-    parser.add_argument("--web", help="optional IP address of the web server", default=None)
     parser.add_argument("--loop", help="Loop values from a file or not (default 'false')", action="store_true")
     parser.add_argument("--delay", type=int, default=config.playback_delay,
                         help="Timeout in seconds between each row of replay loop (default {})".format(
@@ -487,4 +464,4 @@ if __name__ == '__main__':
         history_files = os.path.join(os.path.join(script_dir, config.history_dir))
         sensei.load(history_files, args.delay, config.playback_weights)
 
-    asyncio.get_event_loop().run_until_complete(_main(config, sensei, args.ip, args.web))
+    asyncio.get_event_loop().run_until_complete(_main(config, sensei, args.ip))
diff --git a/Server/lighting_designer.py b/Server/lighting_designer.py
index 9d211e3..43de75d 100644
--- a/Server/lighting_designer.py
+++ b/Server/lighting_designer.py
@@ -356,11 +356,6 @@ class LightingDesigner:
                 self.update_tplink_status()
             new_clients = self.server.get_stale_clients()
             has_new_clients = len(new_clients) > 0
-            wc = self.server.get_web_server_context()
-            web_cmd = wc.commands.dequeue()
-            if web_cmd is not None:
-                _, cmd = web_cmd
-                self.onmessage("web", cmd)
 
             try:
                 self.process_next_message()
diff --git a/Server/main.htm b/Server/main.htm
deleted file mode 100644
index d99cc1f..0000000
--- a/Server/main.htm
+++ /dev/null
@@ -1,148 +0,0 @@
-<html>
-<head>
-    <title>Ada</title>
-    <link rel="stylesheet" href="main.css">
-    <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.4.1/css/bootstrap.min.css" crossorigin="anonymous">
-    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.11.2.min.js"></script>
-    <script>
-        window.jQuery || document.write('<script src="/assets/js/vendor/jquery-1.11.2.min.js"><\/script>')
-    </script>
-</head>
-<body>
-    <div class="tilelist">
-        <div class="tile" style="background: rgb(48,48,48)" command="/power/on">
-            <p class="caption" style="color:white">ON</p>
-        </div>
-        <div class="tile" style="background: rgb(48,48,48)" command="/power/off">
-            <p class="caption" style="color:white">OFF</p>
-        </div>
-        <div class="tile" style="background: rgb(120, 0, 0)" command="/emotion/anger">
-            <p class="caption" style="color:white">Anger</p>
-        </div>
-        <div class="tile" style="background: rgb(220, 60, 2)" command="/emotion/contempt">
-            <p class="caption">Contempt</p>
-        </div>
-        <div class="tile" style="background: rgb(100, 200, 0)" command="/emotion/disgust">
-            <p class="caption">Disgust</p>
-        </div>
-        <div class="tile" style="background: rgb(80, 80, 80)" command="/emotion/fear">
-            <p class="caption" style="color:white">Fear</p>
-        </div>
-        <div class="tile" style="background: rgb(255, 220, 0)" command="/emotion/happiness">
-            <p class="caption">Happiness</p>
-        </div>
-        <div class="tile" style="background: rgb(90, 160, 255)" command="/emotion/neutral">
-            <p class="caption">Neutral</p>
-        </div>
-        <div class="tile" style="background: rgb(0, 20, 160)" command="/emotion/sadness">
-            <p class="caption" style="color:white">Sadness</p>
-        </div>
-        <div class="tile" style="background: rgb(160, 0, 160)" command="/emotion/surprise">
-            <p class="caption">Surprise</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/neurons">
-            <p class="caption">Neural</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/rainbow">
-            <p class="caption">Rainbow</p>
-        </div>
-        <div class="tile" style="background: rgb(252, 35, 35)" command="/animation/fire">
-            <p class="caption">Fire</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/red yellow gradient">
-            <p class="caption">Yellow/Red<br/>Gradient</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/blue red gradient">
-            <p class="caption">Blue/Red<br/>Gradient</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/yellow green gradient">
-            <p class="caption">Yellow/Green<br/>Gradient</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/blue green gradient">
-            <p class="caption">Blue/Green<br/>Gradient</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/moving gradient 1">
-            <p class="caption">Moving<br/>Gradient 1</p>
-        </div>
-        <div class="tile" style="background: rgb(180,80,80)" command="/animation/diagonal gradient">
-            <p class="caption">Diagonal<br/>Gradient</p>
-        </div>
-        <div class="tile" style="background: rgb(121,243,243)" command="/animation/moving gradient 2">
-            <p class="caption">Moving<br/>Gradient 2</p>
-        </div>
-        <div class="tile" style="background: rgb(35, 133, 133)" command="/rain/toggle">
-            <p class="caption">Toggle Rain</p>
-        </div>
-        <div class="tile" style="background: rgb(50, 104, 104)" command="/animation/color cycle">
-            <p class="caption">Color Cycle</p>
-        </div>
-        <div class="tile" style="background: rgb(73, 134, 93)" command="/animation/gradient cycle">
-            <p class="caption">Gradient Cycle</p>
-        </div>
-        <div class="tile" style="background: rgb(0, 255, 80)" command="/animation/moving gradient cycle">
-            <p class="caption">Moving Gradient Cycle</p>
-        </div>
-        <div class="tile" style="background: rgb(48,48,48)"  command="/power/run">
-            <p class="caption" style="color:white">Run</p>
-        </div>
-        <div class="tileX">
-            <p>Red: <input id="red" type="text" value="128"/> </p>
-            <p>Green: <input id="green" type="text" value="0"/> </p>
-            <p>Blue: <input id="blue" type="text" value="0"/> </p>
-            <p><button id="adabutton" onclick="SetColor()">Ada</button> <button onclick="SetDmx()">Dmx</button> </p>
-        </div>
-    </div>
-    <br clear="all"/>
-    <div class="statusbar">
-    </div>
-    <script>
-        function getColorComponent(id) {
-            var r = parseInt($(id).val())
-            if (isNaN(r) || r < 0 || r > 255) {
-                r = 0;
-            }
-            $(id).val(r)
-            return r;
-        }
-
-        function SendCommand(cmd){
-            $(".statusbar")[0].innerText = "sending command: " + command;
-            var xhttp = new XMLHttpRequest();
-            xhttp.onload = function(e) {
-                $(".statusbar")[0].innerText = xhttp.responseText;
-            }
-            xhttp.open("GET", command);
-            xhttp.send();
-        }
-
-        function SetColor(){
-            var r = getColorComponent("#red")
-            var g = getColorComponent("#green")
-            var b = getColorComponent("#blue")
-            command = "/color/" + r + "," + g + "," + b;
-
-            SendCommand(command);
-        }
-
-        function SetDmx(){
-            var r = getColorComponent("#red")
-            var g = getColorComponent("#green")
-            var b = getColorComponent("#blue")
-            command = "/dmx/" + r + "," + g + "," + b;
-
-            SendCommand(command);
-        }
-
-        function SelectTile(e)
-        {
-            command = e.target.parentNode.getAttribute("command");
-            SendCommand(command);
-        }
-
-        $(".tile").each(function () {
-            var tile = $(this)[0];
-            tile.onclick = SelectTile;
-        });
-    </script>
-</body>
-</html>
diff --git a/Server/run_server.ps1 b/Server/run_server.ps1
index 51f6fa1..f1192ab 100644
--- a/Server/run_server.ps1
+++ b/Server/run_server.ps1
@@ -7,4 +7,4 @@ if ($addr -eq $null) {
 Write-Host Running Server on $local_addr
 Write-Host Hosting Web site on on $addr
 # ensure C:\Users\Administrator\.conda\envs\ada\ is in the path
-&python ada_server.py --ip $local_addr --loop --web $addr
\ No newline at end of file
+&python ada_server.py --ip $local_addr --loop
\ No newline at end of file
diff --git a/Server/web_server.py b/Server/web_server.py
deleted file mode 100644
index 15284be..0000000
--- a/Server/web_server.py
+++ /dev/null
@@ -1,55 +0,0 @@
-# Copyright (c) Microsoft Corporation.
-# Licensed under the MIT license.
-import os
-from http.server import BaseHTTPRequestHandler
-import urllib
-import priority_queue
-
-
-class WebServerContext:
-    def __init__(self):
-        self.commands = priority_queue.PriorityQueue()
-
-
-Context = WebServerContext()
-
-
-class AdaWebServer(BaseHTTPRequestHandler):
-    def do_GET(self):
-        global Context
-        if self.path.endswith(".css") or self.path.endswith(".htm"):
-            return self.serve_file(self.path)
-        elif self.path == "/":
-            return self.serve_file("main.htm")
-        elif self.path == "/favicon.ico":
-            self.send_response(400)
-            return
-        self.handle_command(self.path)
-
-    def serve_file(self, filename):
-        if filename.startswith("/"):
-            filename = filename[1:]
-        ext = os.path.splitext(filename)[1]
-        script_path = os.path.dirname(__file__)
-        self.send_response(200)
-        if ext == ".css":
-            self.send_header("Content-type", "text/css")
-        elif ext == ".htm" or ext == ".html":
-            self.send_header("Content-type", "text/html")
-        else:
-            raise Exception("Unsupported file type")
-        self.end_headers()
-
-        with open(os.path.join(script_path, filename), "rb") as f:
-            while True:
-                chunk = f.read(8000)
-                if chunk:
-                    self.wfile.write(chunk)
-                else:
-                    break
-
-    def handle_command(self, command):
-        Context.commands.enqueue(1, urllib.parse.unquote(command))
-        self.send_response(200)
-        self.send_header("Content-type", "text/text")
-        self.wfile.write(bytes("ok", encoding='utf-8'))
